#include <iostream>
#include <memory.h>
using namespace std;
int aMatch[5001];
int bMatch[101];
bool visited[101];
bool adj[101][5001];
int n, m;
bool dfs(int start)
{
	if (visited[start])
		return false;
	visited[start] = true;
	for (int i = 1; i <= m; i++)
	{
		if (adj[start][i])
		{
			if (bMatch[i] == -1 || dfs(bMatch[i]))
			{
				aMatch[start] = i;
				bMatch[i] = start;
				return true;
			}
		}
	}

	return false;
}
void bipartite()
{
	int result = 0;
	memset(aMatch, -1, sizeof(aMatch));
	memset(bMatch, -1, sizeof(bMatch));
	for (int i = 1; i <= n; i++)
	{
		memset(visited, false, sizeof(visited));
		if (dfs(i))
			result++;
	}
	cout << result << endl;
}
int main()
{
	cin >> n >> m;
	int person, notebook;
	for (int i = 1; i <= m; i++)
	{
		cin >> person >> notebook;
		adj[person][notebook] = true;
	}
	bipartite();
}
