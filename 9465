#include <iostream>
#include <algorithm>
#include <string.h>
using namespace std;

int n;
int T;
int arr[100001][2];
int dp[100001][3]; // 0 - nothing 1- upper 2-lower

int main()
{
	cin >> T;
	for (int test = 0; test < T; test++)
	{
		memset(arr, 0, sizeof(arr));
		memset(dp, 0, sizeof(dp));
		cin >> n;
		for (int i = 1; i <= n; i++)
			cin >> arr[i][0];
		for (int i = 1; i <= n; i++)
			cin >> arr[i][1];

		dp[1][0] = 0;
		dp[1][1] = arr[1][0];
		dp[1][2] = arr[1][1];
		for (int i = 2; i <= n; i++)
		{
			dp[i][0] = max(dp[i - 1][1], max(dp[i - 1][0], dp[i - 1][2]));
			dp[i][1] = max(dp[i - 1][0], dp[i - 1][2]) + arr[i][0];
			dp[i][2] = max(dp[i - 1][0], dp[i - 1][1]) + arr[i][1];
		}
		cout << max(dp[n][0], max(dp[n][1], dp[n][2])) << endl;
	}
	return 0;
}
