#include <iostream>
#include <algorithm>
using namespace std;

int dp[1000000];

int main()
{
	int n;
	cin >> n;
	dp[1] = 0;
	for (int i = 2; i <= n; i++)
	{
		if (i % 3 == 0 && i % 2 == 0)
			dp[i] = min(dp[i / 3], min(dp[i / 2], dp[i - 1])) + 1;
		else if (i % 3 == 0)
			dp[i] = min(dp[i / 3], dp[i - 1]) + 1;
		else if (i % 2 == 0)
			dp[i] = min(dp[i / 2], dp[i - 1]) + 1;
		else
			dp[i] = dp[i - 1] + 1;
	}
	cout << dp[n] << endl;
	while (1)
	{
		cout << n << ' ';
		if (n == 1)
			break;
		if (n % 3 == 0 && n % 2 == 0)
		{
			if (dp[n] == dp[n / 3] + 1)
				n = n / 3;
			else if (dp[n] == dp[n / 2] + 1)
				n = n / 2;
			else
				n = n - 1;
		}
		else if (n % 3 == 0)
			if (dp[n] == dp[n / 3] + 1)
				n = n / 3;
			else
				n = n - 1;
		else if (n % 2 == 0)
			if (dp[n] == dp[n / 2] + 1)
				n = n / 2;
			else
				n = n - 1;
		else
			n = n - 1;
	}
	cout << endl;
	return 0;
}
