#include<iostream>
using namespace std;
int arr[81];
int n;
bool fin = false;
bool ispromise(int stage)
{
	for (int len = 1; len <= (stage / 2); len++)
	{
		bool tf = false;
		int right = 2 * len - 1;
		int left = len - 1;
		for (int i = 0; i < len; i++)
		{
			if (arr[stage - right+i] != arr[stage - left+i])
				tf = true;
		}
		if (tf == false)
			return false;
	}
	return true;
}
void go(int stage)
{
//	cout << stage << endl;
	if (fin) return;
	if (stage > n)
	{
		for (int i = 1; i <= n; i++)
			cout << arr[i];
		fin = true;
		return;
	}
	for (int i = 1; i <= 3; i++)
	{
		arr[stage] = i;
		bool ne = ispromise(stage);
//		cout << stage << ' ' << i << ' ' << ne << endl;
		if (ne)
		{
//			cout << stage + 1 << "단계로 넘어감" <<i<<ne<< endl;
			go(stage + 1);
		}
	}
//	arr[stage] = 0;
	return;
}
int main()
{
	cin >> n;
	go(1);
//	for (int i = 1; i <= n; i++)
//		cout << arr[i];
	cout << endl;
	return 0;
}
