#include <iostream>
#include <string.h>
using namespace std;
#define mod 1000000000
long long dp[101][10][1024];
int n, last, state;
long long result;
int go(int i, int j, int s);
int main()
{
	cin >> n;
	go(1, 1, 1 << 1);
	go(1, 2, 1 << 2);
	go(1, 3, 1 << 3);
	go(1, 4, 1 << 4);
	go(1, 5, 1 << 5);
	go(1, 6, 1 << 6);
	go(1, 7, 1 << 7);
	go(1, 8, 1 << 8);
	go(1, 9, 1 << 9);
	for (int i = 1; i <= 9; i++)
	{
		result += dp[1][i][(1 << i)];
		result %= mod;
	}
	cout << result << endl;
	return 0;
}

int go(int i, int j, int s)
{
	if (i > n)return 0;
	if (s == (1 << 10) - 1 && n ==i) return 1;
	if (dp[i][j][s] != 0)
	{
		dp[i][j][s] %= mod;
		return dp[i][j][s];
	}
	if (j - 1 >= 0 && j + 1 <= 9)
	{
		dp[i][j][s] += go(i + 1, j - 1, s | (1 << (j - 1))) + go(i + 1, j + 1, s | (1 << (j + 1)));
		dp[i][j][s] %= mod;
	}
	else if (j - 1 < 0)
	{
		dp[i][j][s] += go(i + 1, j + 1, s | (1 << (j + 1)));
		dp[i][j][s] %= mod;
	}
	else
	{
		dp[i][j][s] += go(i + 1, j - 1, s | (1 << (j - 1)));
		dp[i][j][s] %= mod;
	}
	dp[i][j][s] %= mod;
	return dp[i][j][s];
}
